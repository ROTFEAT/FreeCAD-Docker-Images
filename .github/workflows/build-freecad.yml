name: Auto Build FreeCAD Docker

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 2 1 * *'  # 每月1日凌晨2点运行
  workflow_dispatch:      # 支持手动触发


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_REPO: wyxsg/freecad-python


    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Get latest FreeCAD release version
      id: get_version
      shell: bash
      run: |
        latest=$(curl -s https://api.github.com/repos/FreeCAD/FreeCAD/releases/latest | jq -r .tag_name)
        echo "Latest version: $latest"
        echo "version=$latest" >> $GITHUB_OUTPUT
    
    

    - name: Get latest FreeCAD AppImage URL
      id: get_appimage
      shell: bash
      run: |
        # 获取最新版本发布信息
        response=$(curl -s https://api.github.com/repos/FreeCAD/FreeCAD/releases/latest)
    
        # 提取 tag_name，例如 0.21.2
        version=$(echo "$response" | jq -r .tag_name)
        echo "Latest version: $version"
        # 从 assets 中找到包含 x86_64 和 AppImage 的下载链接
        url=$(echo "$response" | jq -r '.assets[] | select(.name | test("x86_64.*AppImage$")) | .browser_download_url')
    
        echo "Download URL: $url"
    
        # 输出供后续使用
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "download_url=$url" >> $GITHUB_OUTPUT

    
        

#    - name: Download FreeCAD AppImage
#      shell: bash
#      run: |
#        version=${{ steps.get_version.outputs.version }}
#
#        url="https://github.com/FreeCAD/FreeCAD/releases/download/${version}/FreeCAD-${version}-Linux-x86_64.AppImage"
#        echo "Downloading $url"
#        curl -L $url -o FreeCAD.AppImage
#        chmod +x FreeCAD.AppImage
#
#    - name: Build Docker image
#      run: |
#        docker build -t $DOCKERHUB_REPO:${{ steps.get_version.outputs.version }} .
#
#    - name: Log in to Docker Hub
#      uses: docker/login-action@v3
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Push Docker image
#      run: |
#        docker push $DOCKERHUB_REPO:${{ steps.get_version.outputs.version }}
#        # 同时添加 latest 标签
#        docker tag $DOCKERHUB_REPO:${{ steps.get_version.outputs.version }} $DOCKERHUB_REPO:latest
#        docker push $DOCKERHUB_REPO:latest
